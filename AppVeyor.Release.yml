#---------------------------------#
#      General Configuration      #
#---------------------------------#

# Branches to build (whitelist)
branches:
  only:
    - master

# Don't trigger a build when a commit is tagged
skip_tags: true

# Set clone depth (we don't need history to build)
clone_depth: 1

# Maximum number of concurrent jobs for the project
max_jobs: 1

#---------------------------------#
#    Environment Configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2019 Preview

# Scripts that are called at very beginning, before repo cloning
init:
  # Good practice, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true

# Scripts that are called after repo cloning, but before building
install:
  - cmd: git submodule update --init --recursive

# Set environment variables
environment:
  GIT_USERNAME:
    secure: CoE8vQ7m2x0WlSCl1Nb/wg==
  GIT_PASSWORD:
    secure: VcjmWBPVu6Dwy4L72+Kv6YpsC3tzx7++jt/Idr9QZio=
  NUGET_APIKEY:
    secure: sjAJjx0S7PgXGe92S9XTewKg+BTF4AE1WfmY7LnU+t/PfcMknTRjb3Paqc3WpSEB

#---------------------------------#
#       Build Configuration       #
#---------------------------------#

# Run custom scripts instead of automatic MSBuild
build_script:
  - ps: ./build.ps1 -t build

#---------------------------------#
#       Test Configuration        #
#---------------------------------#

# Run custom scripts instead of automatic tests
test_script:
  - ps: ./build.ps1 -t test

#---------------------------------#
#      Artifacts Configuration    #
#---------------------------------#

artifacts:
  - path: 'publish\*.nupkg'

#---------------------------------#
#     Deployment Configuration    #
#---------------------------------#

# Deploying to NuGet feed
deploy_script:
  - ps: ./build.ps1 -t cd
